using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.Data.OleDb;
using System.Text.RegularExpressions;
using Maticsoft.DBUtility;
using System.Data.SqlClient;
using Hotel_app.common_file;

namespace Hotel_app.dxpt
{
    public partial class dxpt_send : Form
    {
        public dxpt_send()
        {
            InitializeComponent();
        }

        string sel_cond = " 1=1   ";//后部查询条件
        string tableName = "";
        string sel_cond_0 = "";//前部查询
        string inport_filename = "";//导入的文件名
        string inport_file_type = "";//导入的文件类型
        DataSet ds_source = null;
        int CurrentPage = 0;
        int PageSize = 15;
        BLL.Common B_common = new Hotel_app.BLL.Common();
        int tempCount = -1;
        private void b_search_Click(object sender, EventArgs e)
        {
            Frm_gl frm_gl_new = new Frm_gl(this);
            frm_gl_new.StartPosition = FormStartPosition.CenterScreen;
            if (frm_gl_new.ShowDialog() == DialogResult.OK)
            {
                if(!frm_gl_new.TableName.Equals(tableName))//不等，就先清空当前的查询条件
                {
                    sel_cond = " 1=1 ";
                }
               sel_cond += frm_gl_new.get_sel_cond;
                tableName = frm_gl_new.TableName;
                inport_file_type = frm_gl_new.inport_file_type;
                inport_filename=frm_gl_new.Inport_fileName;

                if (tableName.Equals(common_dxpt.dx_table_source_ks))
                {
                    sel_cond_0 = "select  distinct krdh,krxm,zjhm   from   " + tableName;
                }
                if (tableName.Equals(common_dxpt.dx_table_source_hy))
                {
                    sel_cond_0 = " select distinct   krsj as  krdh,krxm,zjhm   from   " + tableName;
                }
                if (tableName.Equals(common_dxpt.dx_table_source_xydw))
                {
                    sel_cond_0 = " select distinct  krdh,nxr as  krxm,xydw as zjhm  from  " + tableName;
                }
                if (!tableName.Equals(common_dxpt.dx_table_wb))
                {
                     tempCount = -1;
                    ds_source = B_common.GetList(sel_cond_0, sel_cond);

                    DataTable dt = DbHelperSQL.CommonPagination(tableName, tableName + ".id", tableName + ".id", CurrentPage, PageSize, "*", sel_cond, "", ref tempCount);



                    bs_infoSource.DataSource = ds_source;
                    dg_infoSource.AutoGenerateColumns = false;
                    dg_infoSource.DataSource = dt;
                }
                if (tableName.Equals(common_dxpt.dx_table_wb))
                {
                    if (inport_file_type.Equals("xls"))//导入EXCEL
                    {
                        ds_source = ExcelToDataSet(inport_filename);
                        if (ds_source != null && ds_source.Tables[0].Rows.Count > 0)
                        {
                            for (int i = 0; i < ds_source.Tables[0].Rows.Count; i++)
                            {
                                string addInfo = "";//增加的
                                string krxm = ds_source.Tables[0].Rows[i]["krxm"].ToString();
                                string zjhm = ds_source.Tables[0].Rows[i]["zjhm"].ToString();
                                string krdh = ds_source.Tables[0].Rows[i]["krdh"].ToString();
                                if (!krxm.Equals("") && !krdh.Equals(""))
                                {
                                    addInfo = krxm + "|" + zjhm + "|" + krdh;
                                    listBox1.Items.Add(addInfo);
                                }
                            }
 
                        }
                    }
                    if (inport_file_type.Equals("txt"))//导入txt
                    {
                        System.IO.StreamReader sr = new System.IO.StreamReader(inport_filename,System.Text.Encoding.Default);
                        string sLine = "";
                        while (sLine != null)
                        {
                            sLine =sr.ReadLine();
                            if (sLine != null && !sLine.Equals(""))
                                listBox1.Items.Add(sLine);
                        }
                        sr.Close();
                        common_file.common_app.Message_box_show(common_file.common_app.message_title, "导入成功");
                    }
                }
            }
        }

        private void dbClick()
        {
                //全选
                if (operateType == "SelectAll")
                {
                    for (int i = 0; i < ds_source.Tables[0].Rows.Count; i++)
                    {
                        string addInfo = "";//增加的
                        string krxm = ds_source.Tables[0].Rows[i]["krxm"].ToString();
                        string zjhm = ds_source.Tables[0].Rows[i]["zjhm"].ToString();
                        string krdh = ds_source.Tables[0].Rows[i]["krdh"].ToString();
                        if (!krxm.Equals("") && !krdh.Equals(""))
                        {
                            addInfo = krxm + "|" + zjhm + "|" + krdh;
                            listBox1.Items.Add(addInfo);
                        }
                    }
                }
                if (operateType == "CancelAll")
                {
                    if (listBox1.Items.Count > 0)
                    {
                        listBox1.Items.Clear();
                    }
                }

                //取消多条
                if (operateType == "CancelMulti")
                {
                    if (listBox1.SelectedItems.Count> 0)
                    {
                        for (int i = 0; i < listBox1.SelectedItems.Count;)
                        {
                            listBox1.Items.Remove(listBox1.SelectedItems[i]); 
                        }
                    }

                }

                //选择多条
                if (operateType == "SelectMulti")
                {
                    foreach (DataGridViewRow   dgvr_temp in dg_infoSource.Rows)
                    {
                        DataGridViewCheckBoxCell chk = dgvr_temp.Cells[0] as DataGridViewCheckBoxCell;

                        if (bool.Parse(chk.EditingCellFormattedValue.ToString()))
                        {
                            DataRowView dgr = dgvr_temp.DataBoundItem as DataRowView;
                            int i = ds_source.Tables[0].Rows.IndexOf(dgr.Row);
                            string addInfo = "";//增加的
                            string krxm = ds_source.Tables[0].Rows[i]["krxm"].ToString();
                            string zjhm = ds_source.Tables[0].Rows[i]["zjhm"].ToString();
                            string krdh = ds_source.Tables[0].Rows[i]["krdh"].ToString();
                            if (!krxm.Equals("")  && !krdh.Equals(""))
                            {

                                addInfo = krxm + "|" + zjhm + "|" + krdh;
                                listBox1.Items.Add(addInfo);
                            }
                        }
                    }
                }
        }
        string operateType = "";
        private void b_selectAll_Click(object sender, EventArgs e)
        {
            operateType = "SelectAll";
            dbClick();
        }

        private void b_SelectMulti_Click(object sender, EventArgs e)
        {
            operateType = "SelectMulti";
            dbClick();
        }

        private void b_CancelMulti_Click(object sender, EventArgs e)
        {
            operateType = "CancelMulti";
            dbClick();
        }

        private void b_CancelAll_Click(object sender, EventArgs e)
        {
            operateType = "CancelAll";
            dbClick();
        }

        //实现excel导入
        static public DataSet ExcelToDataSet(string filename)
        {
            DataSet ds;
            string strCon = "Provider=Microsoft.Jet.OLEDB.4.0;" +
                            "Extended Properties=Excel 8.0;" +
                            "data source=" + filename;
            OleDbConnection myConn = new OleDbConnection(strCon);
            string strCom = " SELECT * FROM [Sheet1$]";
            myConn.Open();
            OleDbDataAdapter myCommand = new OleDbDataAdapter(strCom, myConn);
            ds = new DataSet();
            myCommand.Fill(ds);
            myConn.Close();
            return ds;
        }


        //实现短信发送群发
         public void SendMsM()
         {
             string info = "";
             string krxm_0 = "";
             string krsj_0 = "";
             string[]  infoString=null;
             List<string> list_send = new List<string>();
            if (listBox1.Items.Count > 0)
            {
                list_send.Clear();
                foreach (string  lvi in listBox1.Items)
                {
                    info = lvi.Trim();
                    //提取用户名,手机号
                    infoString = lvi.Trim().Split(new char[] { '|' });
                    if (infoString.Length== 3)//三列的格式
                    {
                        krxm_0 = infoString[0];
                        krsj_0 = infoString[2];
                        //检查发送信息（号码和姓名）的完整性
                        if (!krxm_0.Equals("") && krsj_0.Length >= 11)
                        {
                            //信息完整进行发送
                            bool check = System.Text.RegularExpressions.Regex.IsMatch(krsj_0, @"^[1]+[3,4,5,6,8]+\d{9}");
                            if (check)
                            {
                                krsj_0 = krsj_0.Substring(0, 11);
                                string timeNowSend = DateTime.Now.ToString();//记录发送时间 
                                string[] retureResult = new string[2];
                                retureResult[0] = common_file.common_app.get_failure;//指示是否发送成功
                                retureResult[1] = "";//存储发送的代码返回值

                                //发送短信
                                Hotel_app.Hhygl_app.Hhygl_app Hhygl_app_services_new = new Hotel_app.Hhygl_app.Hhygl_app();
                                Hhygl_app_services_new.Url = common_file.common_app.service_url + "Hhygl/Hhygl_app.asmx";
                                object result = Hhygl_app_services_new.Hhygl_SendMsm_temporay(krsj_0, krxm_0, txt_sendContent.Text.Trim(), common_file.common_app.yydh, common_file.common_app.qymc, common_file.common_hyAction.hy_Action_dxqf, common_file.common_app.xxzs);
                                //记录发送的详细信息
                                if (result != null)
                                {
                                    string[] aa = (string[])result;
                                    DbHelperSQLP sqlp = new DbHelperSQLP();
                                    SqlParameter[] parms1 = new SqlParameter[9];

                                    parms1[0] = new SqlParameter("@phoneNo", SqlDbType.VarChar, 100);
                                    parms1[1] = new SqlParameter("@userName", SqlDbType.VarChar, 100);
                                    parms1[2] = new SqlParameter("@information", SqlDbType.VarChar, 8000);
                                    parms1[3] = new SqlParameter("@yydh", SqlDbType.VarChar, 100);
                                    parms1[4] = new SqlParameter("@qymc", SqlDbType.VarChar, 100);
                                    parms1[5] = new SqlParameter("@sendTime", SqlDbType.DateTime);
                                    parms1[6] = new SqlParameter("@sendStatus", SqlDbType.VarChar, 300);
                                    parms1[7] = new SqlParameter("@sendStatusCode", SqlDbType.VarChar, 100);
                                    parms1[8] = new SqlParameter("@czy", SqlDbType.VarChar,100);

                                    parms1[0].Value = krsj_0;
                                    parms1[1].Value = krxm_0;
                                    parms1[2].Value = txt_sendContent.Text.Trim().Replace("'", "-");
                                    parms1[3].Value = common_file.common_app.yydh;
                                    parms1[4].Value = common_file.common_app.qymc;
                                    parms1[5].Value = timeNowSend;
                                    parms1[6].Value = aa[0];
                                    parms1[7].Value = aa[1];
                                    parms1[8].Value = common_file.common_app.czy;

                                    try
                                    {
                                        sqlp.RunProcedure("AddDxDetailIntoDx_details", parms1);
                                    }
                                    catch (Exception  ee)
                                    {
                                        common_czjl.add_errorlog(parms1.ToString(), ee.ToString(), DateTime.Now.ToString());

                                    }
                                }
                                else
                                {
                                    common_file.common_app.Message_box_show(common_file.common_app.message_title, "记录" + lvi + "不符合要求,系统请求删除!");
                                    continue;
                                }
                            }
                        }
                    }
                }
            }
        }
        private void b_check_Click(object sender, EventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e)
        {
            SendMsM();
        }

        private void b_exportToExcel_Click(object sender, EventArgs e)
        {
            //将当前内容导出编辑后再用于导入
            common_file.common_DataSetToExcel.ExportMX(ds_source, "dx_send", "短信群发临时内容导出");
        }

        private void b_refresh_Click(object sender, EventArgs e)
        {
            ds_source = null;
            dg_infoSource.DataSource = null;
            sel_cond = "  1=1  ";
        }

        private void b_next_Click(object sender, EventArgs e)
        {
            CurrentPage += 1;
            DataTable dt = DbHelperSQL.CommonPagination(tableName, tableName + ".id", tableName + ".id", CurrentPage, 20, "*", sel_cond, "", ref tempCount);
            ds_source.Tables.Add(dt);
            dg_infoSource.DataSource = ds_source.Tables[0].DefaultView;
        }

        private void b_previous_Click(object sender, EventArgs e)
        {
            if (CurrentPage >= 1)
            {
                CurrentPage -= 1;
            }
            DataTable dt = DbHelperSQL.CommonPagination(tableName, tableName + ".id", tableName + ".id", CurrentPage, 20, "*", sel_cond, "", ref tempCount);
            ds_source.Tables.Add(dt);
            dg_infoSource.DataSource = ds_source.Tables[0].DefaultView;
        }
    }
}